{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.URL = 'http://localhost:3000/api';\n  }\n  userRegister(user) {\n    return this.http.post(this.URL + '/register', user);\n  }\n  userLogin(user) {\n    return this.http.post(this.URL + '/login', user);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/tasks']);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,QAAG,GAAG,2BAA2B;EACF;EAEvCC,YAAY,CAACC,IAAS;IACpB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,IAAI,CAACC,GAAG,GAAG,WAAW,EAAEF,IAAI,CAAC;EAC1D;EAEAG,SAAS,CAACH,IAAS;IACjB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,IAAI,CAACC,GAAG,GAAG,QAAQ,EAAEF,IAAI,CAAC;EACvD;EAEAI,QAAQ;IACN,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,MAAM;IACJF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;AAnBWd,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFV;AAAM","names":["AuthService","constructor","http","userRegister","user","post","URL","userLogin","getToken","localStorage","getItem","logout","removeItem","router","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Lupi\\Desktop\\challengetechforb-main\\challengetechforb-main\\client\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private URL = 'http://localhost:3000/api';\n  constructor(private http: HttpClient) {}\n\n  userRegister(user: any) {\n    return this.http.post<any>(this.URL + '/register', user);\n  }\n\n  userLogin(user: any) {\n    return this.http.post<any>(this.URL + '/login', user);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/tasks']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}